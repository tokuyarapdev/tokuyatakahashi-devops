# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs: 
    - job: Build
      steps:
      - task: ServiceNow-DevOps-Agent-Artifact-Registration@1
        inputs:
          connectedServiceName: 'dev349899-tokuyatakahashi-devops-ServiceNow DevOps Service Connection'
          artifactsPayload: |
            {
              "artifacts": [
                  {
                    "name": "Pipeline1Artifact",
                    "version": "1.$(Build.BuildId)",
                    "semanticVersion": "1.$(Build.BuildId).0",
                    "repositoryName": "Pipeline1Artifact-Repo"
                  }
              ]
            }
      - script: echo "Build"
  - stage: Test
    jobs:
    - job: Unit_Tests 
      steps:
      - script: echo "Unit Tests"
    - job: Checkmarx_Scan 
      steps:
      - script: echo "Checkmarx_Scan"  
  - stage: Deploy
    jobs:  
      - job: UAT_Deploy
        steps:
        - task: ServiceNow-DevOps-Agent-Package-Registration@1
          inputs:
            connectedServiceName: 'dev349899-tokuyatakahashi-devops-ServiceNow DevOps Service Connection'
            packageName: 'Pipeline1Package'
            artifactsPayload: |
              {
                "artifacts": [
                {
                    "name": "Pipeline1Artifact",
                    "repositoryName": "Pipeline1Artifact-Repo",
                    "version": "1.$(build.buildId)",
                    "pipelineName":"$(system.teamProject)/$(build.definitionName)",
                    "taskExecutionNumber":"$(build.buildId)",
                    "stageName":"$(system.jobDisplayName)",
                    "branchName":"$(build.sourceBranchName)"
                }],
                "pipelineName":"$(system.teamProject)/$(build.definitionName)",
                "taskExecutionNumber":"$(build.buildId)",
                "stageName":"$(system.jobDisplayName)",
                "branchName":"$(build.sourceBranchName)"
              }
        - script: echo "UAT Deploy"
      - job: Production_Deploy
        steps:
        - script: echo "Production Deploy"
